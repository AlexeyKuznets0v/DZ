package buildings;
import maps.Path;
import Hero.Hero;
import tests.LoggerConfig;

import java.util.Random;
import java.util.logging.Logger;

public class Tower extends Path {

    public static final Logger logger = LoggerConfig.setupLogger(Tower.class.getName());

    public int effectType; // 0 - damage, 1 - heal, 2 - skip turn
    public static final int DAMAGE_AMOUNT = 5;
    public static final int HEAL_AMOUNT = 7;

    public Tower() {
        // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞: 0 (–¥–∞–º–∞–∂–∏—Ç), 1 (—Ö–∏–ª–∏—Ç), 2 (–ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞)
        Random random = new Random();
        this.effectType = random.nextInt(3); // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–∏–ø
        setDesign(); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –±–∞—à–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        logger.info("–°–æ–∑–¥–∞–Ω–∞ –±–∞—à–Ω—è —Å —Ç–∏–ø–æ–º —ç—Ñ—Ñ–µ–∫—Ç–∞: " + effectType);
    }

    public void setDesign() {
        switch (effectType) {
            case 0: this.design = "üó°Ô∏è"; break; // –£—Ä–æ–Ω
            case 1: this.design = "üíñ"; break; // –•–∏–ª
            case 2: this.design = "üö´"; break; // –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞
        }
        logger.info("–í–Ω–µ—à–Ω–∏–π –≤–∏–¥ –±–∞—à–Ω–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: " + design);
    }

    public void effect(Hero hero) {
        // –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞
        logger.info("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–∞—à–Ω–∏ –∫ –≥–µ—Ä–æ—é. –¢–∏–ø —ç—Ñ—Ñ–µ–∫—Ç–∞: " + effectType);
        switch (effectType) {
            case 0: // –î–∞–º–∞–∂–∏—Ç
                if (Building.hospital) {
                    logger.info("–õ–µ—á–µ–±–Ω–∏—Ü–∞ —É–±—Ä–∞–ª–∞ —É—Ä–æ–Ω –æ—Ç –±–∞—à–Ω–∏.");
                    System.out.println("–õ–µ—á–µ–±–Ω–∏—Ü–∞ —É–±—Ä–∞–ª–∞ —É—Ä–æ–Ω –æ—Ç –±–∞—à–Ω–∏.");
                    System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health);
                    return; // –ï—Å–ª–∏ –µ—Å—Ç—å –ª–µ—á–µ–±–Ω–∏—Ü–∞, –Ω–µ –Ω–∞–Ω–æ—Å–∏–º —É—Ä–æ–Ω
                }
                System.out.println("–ë–∞—à–Ω—è –Ω–∞–Ω–µ—Å–ª–∞ " + DAMAGE_AMOUNT + " —É—Ä–æ–Ω–∞!");
                hero.takeDamage(DAMAGE_AMOUNT); // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ takeDamage
                logger.warning("–ë–∞—à–Ω—è –Ω–∞–Ω–µ—Å–ª–∞ " + DAMAGE_AMOUNT + " —É—Ä–æ–Ω–∞ –≥–µ—Ä–æ—é.");
                break;

                //System.out.println("–ë–∞—à–Ω—è –Ω–∞–Ω–µ—Å–ª–∞ " + DAMAGE_AMOUNT + " —É—Ä–æ–Ω–∞!");
                //hero.health -= DAMAGE_AMOUNT;
                //System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health);

/*
                // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è
                if (hero.health <= 0) {
                    System.out.println("–ó–¥–æ—Ä–æ–≤—å–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ!");
                    hero.health = 0; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ –º–∏–Ω–∏–º—É–º
                }
                System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ

 */


            case 1: // –•–∏–ª–∏—Ç
                System.out.println("–ë–∞—à–Ω—è –∏—Å—Ü–µ–ª–∏–ª–∞ " + HEAL_AMOUNT + " –∑–¥–æ—Ä–æ–≤—å—è!");
                hero.health += HEAL_AMOUNT;
                logger.info("–ë–∞—à–Ω—è –∏—Å—Ü–µ–ª–∏–ª–∞ –≥–µ—Ä–æ—è –Ω–∞ " + HEAL_AMOUNT + ". –¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ: " + hero.health);
                // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ
                if (hero.health > 100) {
                    System.out.println("–ó–¥–æ—Ä–æ–≤—å–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ!");
                    hero.health = 100; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ –º–∞–∫—Å–∏–º—É–º
                    logger.severe("–ó–¥–æ—Ä–æ–≤—å–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ!");
                }
                System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ
                break;
            case 2: // –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞
                if (Building.hospital) {
                    logger.info("–õ–µ—á–µ–±–Ω–∏—Ü–∞ —É–±—Ä–∞–ª–∞ –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞ –æ—Ç –±–∞—à–Ω–∏.");
                    System.out.println("–õ–µ—á–µ–±–Ω–∏—Ü–∞ —É–±—Ä–∞–ª–∞ –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞ –æ—Ç –±–∞—à–Ω–∏.");
                    System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health + " –û—Å—Ç–∞–≤—à–µ–µ—Å—è —Ö–æ–¥—ã: " + hero.move);
                    return; // –ï—Å–ª–∏ –µ—Å—Ç—å –ª–µ—á–µ–±–Ω–∏—Ü–∞, –Ω–µ –≤—ã—á–µ—Ç–∞–µ–º —Ö–æ–¥
                }
                System.out.println("–≠—Ç–∞ –±–∞—à–Ω—è –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥!");
                hero.move -= 1;
                logger.info("–ì–µ—Ä–æ–π –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥. –û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤: " + hero.move);
                System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health + " –û—Å—Ç–∞–≤—à–µ–µ—Å—è —Ö–æ–¥—ã: " + hero.move ); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ

                if (hero.move <= 0) {
                    logger.warning("–£ –≥–µ—Ä–æ—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–æ–¥—ã!");
                }
                break;
            default:
                logger.warning("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–∞—à–Ω–∏!");
                break;

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã—à–∞
                //if (hero.health <= 0) {
                 //   System.out.println("–ò–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª, –∑–¥–æ—Ä–æ–≤—å–µ —Ä–∞–≤–Ω–æ 0!");
                    // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ —à–∞–≥–∞
               // } else {
                   // System.out.println("–¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: " + hero.health); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ
               // }

        }
    }
}

